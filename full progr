import pandas as pd  
import numpy as np  
import matplotlib.pyplot as plt  
%matplotlib inline
dataset = pd.read_csv("C:/Users/shikky/Desktop/spark/score.csv")
dataset.shape
dataset.describe()
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, 1].values
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)
print(regressor.intercept_)
print(regressor.coef_)
y_pred = regressor.predict(X_test)
df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
df
print(regressor.predict([[2.4]]))
#print(regressor.predict([[9.5]]))
own_pred = regressor.predict([[hours]])
hours = 9.5

print("No of Hours = {}".format(hours))
print("Predicted Score = {}".format(own_pred[0]))
# Plotting the distribution of scores
dataset.plot(x='Hours', y='Scores', style='o')
plt.title('Hours vs Percentage')
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.show()
# Plotting the regression line
line = regressor.coef_*X+regressor.intercept_
# Plotting for the test data
plt.scatter(X, y)
plt.plot(X, line);
plt.show()
